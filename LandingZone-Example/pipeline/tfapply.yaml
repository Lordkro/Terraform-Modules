parameters:
  - name: ServicePrincipal
    type: string

  - name: TerraformVersion
    type: string

  - name: WorkingDirectory
    type: string

  - name: PlanArtifact
    type: string

steps:
  - checkout: foundation
  - checkout: self

  - download: current
    artifact: ${{ parameters.PlanArtifact }}

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: Terraform Install
    condition: always()
    inputs:
      terraformVersion: ${{ parameters.TerraformVersion }}
  
  - task: AzureCLI@2
    inputs:
      azureSubscription: ${{ parameters.ServicePrincipal }}
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $env:ARM_CLIENT_ID="$env:servicePrincipalId"
        $env:ARM_CLIENT_SECRET="$env:servicePrincipalKey"
        $env:ARM_TENANT_ID="$env:tenantId"
        $env:ARM_SUBSCRIPTION_ID="$(az account show --query id --output tsv)"
        terraform init

        if(Test-Path lib) {
          cp lib/* ../cloudspaces.foundation/lib/ -r -Force
        }

      workingDirectory: ${{ parameters.WorkingDirectory }}
      addSpnToEnvironment: true

  - task: TerraformTaskV2@2
    displayName: "Terraform Apply"
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: ${{ parameters.WorkingDirectory }}
      commandOptions: '$(Pipeline.Workspace)/${{ parameters.PlanArtifact }}/tf.plan'
      environmentServiceNameAzureRM: ${{ parameters.ServicePrincipal }}